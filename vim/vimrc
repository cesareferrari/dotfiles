" This file is in ~/dotfiles/vim/vimrc

set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" Keep Plugin commands between vundle#begin/end.
Plugin 'tpope/vim-rails'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-repeat'
Plugin 'tpope/vim-commentary'
Plugin 'tpope/vim-dispatch'
Plugin 'tpope/vim-liquid'
Plugin 'thoughtbot/vim-rspec'
Plugin 'mattn/emmet-vim'
Plugin 'pangloss/vim-javascript'
Plugin 'prettier/vim-prettier'
Plugin 'maxmellon/vim-jsx-pretty'
"Plugin 'ledger/vim-ledger'
Plugin 'dense-analysis/ale'
Plugin 'vim-airline/vim-airline'
Plugin 'wuelnerdotexe/vim-astro'
Plugin 'godlygeek/tabular'
Plugin 'preservim/vim-markdown'
" Plugin 'instant-markdown/vim-instant-markdown'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line


" Use the space key as leader
let mapleader = "\<Space>"

" Numbers
set number
set numberwidth=5

" At the beginning it says filetype off, I am not sure if I have
" to keep on or off. Figure this out.
filetype on
set hidden                      " Allow buffer change w/o saving
set lazyredraw                  " Don't update while executing macros
set backspace=indent,eol,start  " Sane backspace behavior
set history=1000                " Remember last 1000 commands
set scrolloff=4                 " Keep at least 4 lines below cursor

" Switch syntax highlighting on, when the terminal has colors
" Also switch on highlighting the last used search pattern.
if (&t_Co > 2 || has("gui_running")) && !exists("syntax_on")
  syntax on
  set hlsearch
endif

set incsearch

" Softtabs, 2 spaces
set tabstop=2
set shiftwidth=2
set shiftround
set expandtab

" Make it obvious where 80 characters is
set textwidth=80
set colorcolumn=+1


"show the cursor position all the time
set ruler 

" Don't clutter my dirs up with swp and tmp files
set directory=~/.tmp

colorscheme jellybeans

" RSpec.vim mappings
map <leader>t :call RunCurrentSpecFile()<cr>
map <leader>s :call RunNearestSpec()<cr>
map <leader>l :call RunLastSpec()<cr>
map <leader>a :call RunAllSpecs()<cr>


let g:rspec_command = "Dispatch bin/rspec {spec}"
" let g:rspec_command = "!clear && bin/rspec {spec}"


" Split edit my vimrc. <leader> is `space`, so it would be `space v r`
nmap <leader>vr :sp $MYVIMRC<cr>

" Source (reload) my vimrc `space s o`
nmap <leader>so :source $MYVIMRC<cr>

" The Silver Searcher
if executable('ag')
  " Use ag over grep
  set grepprg=ag\ --nogroup\ --nocolor

  " Use ag in CtrlP for listing files. Lightning fast and respects
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'

  " ag is fast enough that CtrlP doesn't need to cache
  let g:ctrlp_use_caching = 0
endif

" bind K to grep word under cursor
noremap K :grep! "\b<C-R><C-W>\b"<CR>:cw<CR>

" bind \ (backward slash) to grep shortcut
command -nargs=+ -complete=file -bar Ag silent! grep! <args>|cwindow|redraw!


" By default, vim thinks .md is Modula-2.
autocmd BufNewFile,BufReadPost *.md set filetype=markdown

" Set ruby filetype for thor files as well
autocmd BufNewFile,BufReadPost *.thor set filetype=ruby

" 202208100859 Without this, astro files are not syntax colored.
" I added a plugin for Astro named 'wuelnerdotexe/vim-astro'
" but I am not sure it works. Nothing happens with the files.
" Adding this line works for now.
autocmd BufNewFile,BufReadPost *.astro set filetype=html

" Without this, vim breaks in the middle of words when wrapping
autocmd FileType markdown setlocal nolist wrap lbr

" Wrap the quickfix window
autocmd FileType qf setlocal wrap linebreak

" Don't automatically continue comments after newline
autocmd BufNewFile,BufRead * setlocal formatoptions-=cro

" Make it more obviouser when lines are too long
highlight ColorColumn ctermbg=235

" Have erb tags surround working  outside of a Rails
" project (for Middleman dev for example)
" more info here: https://github.com/tpope/vim-rails/issues/245
let g:surround_{char2nr('-')} = "<% \r %>"
let g:surround_{char2nr('=')} = "<%= \r %>"

" search ignoring the case
set ignorecase

" Insert timestamp by pressing F3
nmap <F3> i<C-R>=strftime("%Y%m%d%H%M")<CR><Esc>
imap <F3> <C-R>=strftime("%Y%m%d%H%M")<CR>
" format timestamp like this:  2020-05-01 Fri 08:26 AM
"" nmap <F3> i<C-R>=strftime("%Y-%m-%d %a %I:%M %p")<CR><Esc>

" Remove numbers from .todo files
autocmd BufNewFile,BufRead *.todo set nonumber

" Allow per-project configuration files
" https://andrew.stwrt.ca/posts/project-specific-vimrc/
set exrc
set secure

" Set Standard as the only linter and fixer for Ruby files 
" and thereby preventing conflicts with RuboCop
let g:ale_linters = {'ruby': ['standardrb']}
let g:ale_fixers = {'ruby': ['standardrb']}

" automatically fixing on save
let g:ale_fix_on_save = 1

" show errors or warnings in my statusline
" works with vim-airline
" https://github.com/vim-airline/vim-airline
let g:airline#extensions#ale#enabled = 1

" case insensitive search but it will switch to case sensitive if I use capital letter
set smartcase

" By default vim-markdown plugin activates folds. This disables the folds for the plugin.
let g:vim_markdown_folding_disabled=1

" Highlight YAML frontmatter
let g:vim_markdown_frontmatter = 1

" By default, Vim opens the split to the left or top of the current window
" these set to open the split below or right
set splitbelow
set splitright

au BufReadCmd *.epub call zip#Browse(expand("<amatch>"))
